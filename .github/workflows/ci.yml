name: Minimal CI Pipeline

on:
  push:
    branches:
      - main
      - develop 
  pull_request:
    branches:
      - main
      - develop

jobs:
  setup:

    runs-on: ubuntu-latest

    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/tags_comments_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 


    steps:
      # Step 1: Checkout your repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Step 3: Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Build backend
      - name: Build Backend
        working-directory: Tags_comments/Tags_comments
        run: mvn clean package -DskipTests

      # Upload backend JAR artifact
      - name: Upload backend JAR
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: Tags_comments/Tags_comments/target/*.jar
          if-no-files-found: error
          retention-days: 7



      # Wait for MySQL to be ready
      #- name: Wait for MySQLffffffffffffffffff
      # new comment to test the ci

      # Run backend tests
      - name: Run Backend Tests
        working-directory: Tags_comments/Tags_comments
        run: mvn test


      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: Angular
        run: npm install

      # Lint frontend
      #- name: Run ESLint
      #  working-directory: Angular
      #  run: npx eslint . --fix-type eslintrc

      # Run frontend tests (if you have any)
      #- name: Run Frontend Tests
      #  working-directory: Angular
      #  run: npx ng test --watch=false --browsers=ChromeHeadless

      # Build frontend production bundle
      - name: Build Frontend
        working-directory: Angular
        run: npx ng build --configuration production

      # Upload frontend dist
      - name: Upload frontend dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: Angular/dist/**/*
          if-no-files-found: error
          retention-days: 7

      # Upload backend test reports (Optional but handy)
      - name: Upload backend test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: Tags_comments/Tags_comments/target/surefire-reports/**
          if-no-files-found: ignore
          retention-days: 7





    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: tags_comments_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3



